# Ailien Platform Control Panel - Helm Values

# Application Configuration
app:
  name: ailien-platform
  version: 1.0.0

# Image Configuration
image:
  repository: ailien-studio/ailien-platform
  tag: "1.0.0"
  pullPolicy: IfNotPresent

# Service Configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 8000

# Ingress Configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: ailien-platform.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: ailien-platform-tls
      hosts:
        - ailien-platform.example.com

# Deployment Configuration
deployment:
  replicaCount: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

# Resource Configuration
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

# Health Checks
healthCheck:
  enabled: true
  path: /health
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Environment Variables
env:
  - name: PORT
    value: "8000"
  - name: DATASPHERE_BASE_URL
    value: "https://academydatasphere.eu10.hcs.cloud.sap"
  - name: DATASPHERE_SPACE_NAME
    value: "GE230769"

# Secrets (to be created separately)
secrets:
  datasphere:
    username: "datasphere-username"
    password: "datasphere-password"

# Autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Security Context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

# Pod Security Context
podSecurityContext:
  fsGroup: 1000

# Node Selection
nodeSelector: {}
tolerations: []
affinity: {}

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    path: /metrics